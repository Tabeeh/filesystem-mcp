name: Release

on:
  push:
    tags:
      - 'v*.*.*' # Trigger only on push of version tags (e.g., v0.5.5)

jobs:
  build:
    # Use the reusable build workflow
    uses: ./.github/workflows/build-reusable.yml
    with:
      ref: ${{ github.ref }} # Pass the tag ref
      upload_artifact: true # Need artifacts for publishing

  publish-npm:
    needs: build # Depends on the reusable build job
    runs-on: ubuntu-latest
    # No 'if' needed here as the entire workflow only runs on tags
    steps:
      - name: Download build artifacts archive
        uses: actions/download-artifact@v4
        with:
          name: ${{ needs.build.outputs.artifact_name }} # Use output from build job
          path: .

      - name: Extract build artifacts
        run: tar -xzf ${{ needs.build.outputs.artifact_name }}.tar.gz # Use consistent name

      - name: Set up Node.js for npm publish
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          registry-url: 'https://registry.npmjs.org/'

      - name: Publish to npm
        # Assumes package.json version matches the tag
        run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  publish-docker:
    needs: build # Depends on the reusable build job
    runs-on: ubuntu-latest
    # No 'if' needed here as the entire workflow only runs on tags
    steps:
      - name: Download build artifacts archive
        uses: actions/download-artifact@v4
        with:
          name: ${{ needs.build.outputs.artifact_name }} # Use output from build job
          path: .

      - name: Extract build artifacts
        run: tar -xzf ${{ needs.build.outputs.artifact_name }}.tar.gz # Use consistent name

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: shtse8/filesystem-mcp
          # Use version from the build job output
          tags: |
            type=semver,pattern={{version}},value=${{ needs.build.outputs.version }}
            type=semver,pattern={{major}}.{{minor}},value=${{ needs.build.outputs.version }}
            type=sha,prefix=,suffix=,event=tag
            type=raw,value=latest

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: . # Context contains extracted artifacts and Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  create-release:
    needs: [build, publish-npm, publish-docker] # Depend on build and both publish jobs
    runs-on: ubuntu-latest
    # No 'if' needed here as the entire workflow only runs on tags
    permissions:
      contents: write
    steps:
      - name: Checkout repository (needed for CHANGELOG)
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }} # Checkout the specific tag

      - name: Download build artifacts archive
        uses: actions/download-artifact@v4
        with:
          name: ${{ needs.build.outputs.artifact_name }} # Use output from build job
          path: .

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          body_path: CHANGELOG.md # Point directly to the changelog file
          # files: ${{ needs.build.outputs.artifact_name }}.tar.gz # Attach the archive
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}