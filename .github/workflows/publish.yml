name: Publish to npm and Docker Hub

on:
  push:
    branches:
      - main # Or your default branch

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.get_version.outputs.version }} # Output the version for other jobs
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20' # Use Node.js 20.x or adjust as needed

      - name: Install dependencies
        run: npm ci # Use ci for cleaner installs in CI

      - name: Build project
        run: npm run build

      - name: Get package version
        id: get_version
        run: echo "version=$(node -p "require('./package.json').version")" >> $GITHUB_OUTPUT

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: |
            build/
            package.json
            README.md
            # Include any other files needed for publishing npm or docker

  publish-npm:
    needs: build # Depends on the build job completing successfully
    runs-on: ubuntu-latest
    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts
          path: . # Download to the current directory

      - name: Set up Node.js for npm publish
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          registry-url: 'https://registry.npmjs.org/'

      - name: Publish to npm
        run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  publish-docker:
    needs: build # Depends on the build job completing successfully
    runs-on: ubuntu-latest
    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts
          path: . # Download to the current directory

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: shtse8/filesystem-mcp # Replace with your Docker Hub username/repo
          tags: |
            type=schedule
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}},value=${{ needs.build.outputs.version }} # Use version from build job output
            type=semver,pattern={{major}}.{{minor}},value=${{ needs.build.outputs.version }}
            type=sha # Add git sha tag
            latest # Add latest tag

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: . # Context is now the directory with downloaded artifacts + Dockerfile (if included)
          push: ${{ github.event_name != 'pull_request' }} # Only push on main branch pushes
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max